{"version":3,"file":"apiTypes.js","sourceRoot":"","sources":["../../ts/types/apiTypes.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,UAAU,CAAA;AAC7B,OAAO,EAAE,eAAe,EAAE,MAAM,oBAAoB,CAAA;AAKpD,MAAM,CAAC,MAAM,yBAAyB,GAAG,CAAC,CAAC,MAAM,CAAC;IACjD,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC/C,MAAM,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,MAAM,CAAC;QAChC,GAAG,EAAE,CAAC,CAAC,MAAM;QACb,KAAK,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAC9C,cAAc,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,eAAe,CAAC;KACvD,CAAC,CAAC;CACH,CAAC,CAAC,UAAU,EAAE,CAAA;AAMf,MAAM,CAAC,MAAM,qBAAqB,GAAG,CAAC,CAAC,MAAM,CAAC;IAC7C,MAAM,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;IAC/C,MAAM,EAAE,CAAC,CAAC,MAAM;CAChB,CAAC,CAAC,UAAU,EAAE,CAAA","sourcesContent":["import * as t from 'funtypes'\nimport { EthereumAddress } from './ethereumTypes.js'\n\n// Not full result definition, only entries that we consume\n// https://docs.etherscan.io/api-endpoints/contracts#get-contract-source-code-for-verified-contract-source-codes\nexport type EtherscanSourceCodeResult = t.Static<typeof EtherscanSourceCodeResult>\nexport const EtherscanSourceCodeResult = t.Object({\n\tstatus: t.Union(t.Literal('1'), t.Literal('0')),\n\tresult: t.ReadonlyTuple(t.Object({\n\t\tABI: t.String,\n\t\tProxy: t.Union(t.Literal('1'), t.Literal('0')),\n\t\tImplementation: t.Union(t.Literal(''), EthereumAddress)\n\t}))\n}).asReadonly()\n\n\n// Not full result definition, only entries that we consume\n// https://docs.etherscan.io/api-endpoints/contracts#get-contract-abi-for-verified-contract-source-codes\nexport type EtherscanGetABIResult = t.Static<typeof EtherscanGetABIResult>\nexport const EtherscanGetABIResult = t.Object({\n\tstatus: t.Union(t.Literal('1'), t.Literal('0')),\n\tresult: t.String\n}).asReadonly()\n\n"]}